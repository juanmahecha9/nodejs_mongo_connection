{"version":3,"sources":["../../src/controller/controller.js"],"names":["indexCtrl","mainRoute","req","res","send","eventRoute","evento","EVENT_","event_name","params","event","id_chat","id","date","Date","done","save","json","err","show","eventRouteDropFile","name_date","toString","find","data_temp","JSON","stringify","fs","writeFile","error","console","log","render","title","url_download","eventRouteGet","path","existsSync","unlinkSync","module","exports"],"mappings":";;AAAA;;AACA;;AACA;;AACA;;;;AAEA,MAAMA,SAAS,GAAG,EAAlB;;AAEAA,SAAS,CAACC,SAAV,GAAsB,OAAOC,GAAP,EAAYC,GAAZ,KAAoB;AACxCA,EAAAA,GAAG,CAACC,IAAJ,CAAS,YAAT;AACD,CAFD;;AAIAJ,SAAS,CAACK,UAAV,GAAuB,OAAOH,GAAP,EAAYC,GAAZ,KAAoB;AACzC,QAAMG,MAAM,GAAG,IAAIC,eAAJ,CAAW;AACxBC,IAAAA,UAAU,EAAEN,GAAG,CAACO,MAAJ,CAAWC,KADC;AAExBC,IAAAA,OAAO,EAAET,GAAG,CAACO,MAAJ,CAAWG,EAFI;AAGxBC,IAAAA,IAAI,EAAE,IAAIC,IAAJ;AAHkB,GAAX,CAAf;;AAKA,MAAI;AACF,UAAMC,IAAI,GAAG,MAAMT,MAAM,CAACU,IAAP,EAAnB;AACAb,IAAAA,GAAG,CAACc,IAAJ,CAASF,IAAT;AACD,GAHD,CAGE,OAAOG,GAAP,EAAY;AACZf,IAAAA,GAAG,CAACC,IAAJ,CAASc,GAAT;AACD;AACF,CAZD;;AAaA,IAAIC,IAAI,GAAG,MAAX;;AAEAnB,SAAS,CAACoB,kBAAV,GAA+B,OAAOlB,GAAP,EAAYC,GAAZ,KAAoB;AAC/C,MAAIkB,SAAS,GAAG,IAAIP,IAAJ,GAAWQ,QAAX,EAAhB;AAEF,QAAMhB,MAAM,GAAG,MAAMC,gBAAOgB,IAAP,EAArB;AACA,MAAIC,SAAS,GAAGC,IAAI,CAACC,SAAL,CAAepB,MAAf,CAAhB;;AACAqB,cAAGC,SAAH,+BAA2CJ,SAA3C,EAAuDN,GAAD,IAAS;AAC7D,QAAIA,GAAJ,EAAS;AACP,YAAMW,cAAN;AACD;;AACDC,IAAAA,OAAO,CAACC,GAAR,CAAY,IAAZ;AACD,GALD;;AAOA5B,EAAAA,GAAG,CAAC6B,MAAJ,CAAW,OAAX,EAAoB;AAClBC,IAAAA,KAAK,EAAE,aADW;AAElB3B,IAAAA,MAAM,EAAEA,MAFU;AAGlBa,IAAAA,IAAI,EAAG,IAHW;AAIlBe,IAAAA,YAAY;AAJM,GAApB;AAMD,CAlBD;;AAoBAlC,SAAS,CAACmC,aAAV,GAA0B,OAAOjC,GAAP,EAAYC,GAAZ,KAAoB;AAC5C,QAAMiC,IAAI,GAAG,4BAAb;;AACA,MAAIT,YAAGU,UAAH,CAAcD,IAAd,CAAJ,EAAyB;AACvBN,IAAAA,OAAO,CAACC,GAAR,CAAY,mBAAZ;;AACAJ,gBAAGW,UAAH,CAAcF,IAAd;AACD;;AACD,QAAM9B,MAAM,GAAG,MAAMC,gBAAOgB,IAAP,EAArB;AACA,MAAIC,SAAS,GAAGC,IAAI,CAACC,SAAL,CAAepB,MAAf,CAAhB;;AACA,MAAI;AACFH,IAAAA,GAAG,CAAC6B,MAAJ,CAAW,OAAX,EAAoB;AAClBC,MAAAA,KAAK,EAAE,aADW;AAElB3B,MAAAA,MAAM,EAAEA,MAFU;AAGlBa,MAAAA,IAAI,EAAG;AAHW,KAApB;AAKD,GAND,CAME,OAAOD,GAAP,EAAY;AACZf,IAAAA,GAAG,CAACC,IAAJ,CAASc,GAAT;AACD;AACF,CAjBD;;AAmBAqB,MAAM,CAACC,OAAP,GAAiBxC,SAAjB","sourcesContent":["import EVENT_ from \"../models/Events\";\nimport fs from \"fs\";\nimport { error } from \"console\";\nimport location from \"location-href\";\n\nconst indexCtrl = {};\n\nindexCtrl.mainRoute = async (req, res) => {\n  res.send(\"Main route\");\n};\n\nindexCtrl.eventRoute = async (req, res) => {\n  const evento = new EVENT_({\n    event_name: req.params.event,\n    id_chat: req.params.id,\n    date: new Date(),\n  });\n  try {\n    const done = await evento.save();\n    res.json(done);\n  } catch (err) {\n    res.send(err);\n  }\n};\nlet show = \"juan\"\n\nindexCtrl.eventRouteDropFile = async (req, res) => {\n    let name_date = new Date().toString();\n\n  const evento = await EVENT_.find();\n  let data_temp = JSON.stringify(evento);\n  fs.writeFile(`./src/public/doc/data.json`, data_temp, (err) => {\n    if (err) {\n      throw error;\n    }\n    console.log(\"ok\");\n  });\n\n  res.render(\"index\", {\n    title: \"EVENTS EZRA\",\n    evento: evento,\n    show : true,\n    url_download: `./src/public/doc/data.json`\n  });\n};\n\nindexCtrl.eventRouteGet = async (req, res) => {\n  const path = \"./src/public/doc/data.json\";\n  if (fs.existsSync(path)) {\n    console.log(\"archivo existente\");\n    fs.unlinkSync(path);\n  }\n  const evento = await EVENT_.find();\n  let data_temp = JSON.stringify(evento);\n  try {\n    res.render(\"index\", {\n      title: \"EVENTS EZRA\",\n      evento: evento,\n      show : false\n    });\n  } catch (err) {\n    res.send(err);\n  }\n};\n\nmodule.exports = indexCtrl;\n"],"file":"controller.js"}